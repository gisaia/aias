FROM osgeo/gdal:ubuntu-small-3.6.3

WORKDIR /usr/src

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# do not run as root ...
ENV HOME=/home/app
ENV APP_HOME=/home/app/worker
RUN mkdir -p $HOME && \
    addgroup --system app && adduser --system app --ingroup app && \
    mkdir $APP_HOME
WORKDIR $HOME

COPY ./aeoprocesses/requirements.txt $APP_HOME/requirements.txt

RUN rm -rf /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt focal main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt focal-updates main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb-src mirror://mirrors.ubuntu.com/mirrors.txt focal-updates main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt focal-backports main restricted universe multiverse" >> /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt focal-security main restricted universe multiverse" >> /etc/apt/sources.list

RUN touch /etc/apt/apt.conf.d/99fixbadproxy \
    && echo "Acquire::http::Pipeline-Depth 0;" >> /etc/apt/apt.conf.d/99fixbadproxy \
    && echo "Acquire::http::No-Cache true;" >> /etc/apt/apt.conf.d/99fixbadproxy \
    && echo "Acquire::BrokenProxy true;" >> /etc/apt/apt.conf.d/99fixbadproxy \
    && apt-get update -o Acquire::CompressionTypes::Order::=gz \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get update -y

# Install python 3.10
RUN apt install python3.10 -y

# Make python 3.10 the default
RUN echo "alias python=python3.10" >> ~/.bashrc
RUN echo "alias python3=python3.10" >> ~/.bashrc
RUN export PATH=${PATH}:/usr/bin/python3.10
RUN /bin/bash -c "source ~/.bashrc"

# Install pip
RUN apt install -y --no-install-recommends netcat
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10
RUN pip install -r $APP_HOME/requirements.txt

COPY ./aeoprocesses $APP_HOME/aeoprocesses
COPY ./extensions $APP_HOME/extensions
COPY ./aeoprs/core/models $APP_HOME/aeoprs/core/models
COPY ./aeoprs/core/models/__init__.py $APP_HOME/aeoprs/core/models/__init__.py
COPY ./aeoprs/__init__.py $APP_HOME/aeoprs/__init__.py
COPY ./aeoprs/logger.py $APP_HOME/aeoprs/logger.py

COPY ./conf $APP_HOME/conf
COPY ./setup.py $APP_HOME/setup.py

RUN pip install -e $APP_HOME

WORKDIR $APP_HOME

ENTRYPOINT celery -A aeoprocesses.ingest.proc:app worker -c 2 -n worker@%h  --loglevel=INFO