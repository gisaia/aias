FROM osgeo/gdal:ubuntu-small-3.6.3
ARG version="latest"
ENV AIAS_VERSION=${version}

LABEL io.arlas.aproc-proc.version=${version}
LABEL vendor="GisaÃ¯a"
LABEL description="This container serves ARLAS APROC Processing"

WORKDIR /usr/src

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# do not run as root ...
ENV HOME=/home/app
ENV APP_HOME=/home/app/worker
RUN mkdir -p $HOME && \
    addgroup --system app && adduser --system app --ingroup app && \
    mkdir $APP_HOME
WORKDIR $HOME

COPY ./aproc/requirements.txt $APP_HOME/requirements.txt
COPY ./extensions/requirements.txt $APP_HOME/requirements-ext.txt
COPY ./extensions/requirements.storage.txt $APP_HOME/requirements.storage.txt

# Install python 3.10
RUN apt install python3.10 -y

# Make python 3.10 the default
RUN echo "alias python=python3.10" >> ~/.bashrc
RUN echo "alias python3=python3.10" >> ~/.bashrc
RUN export PATH=${PATH}:/usr/bin/python3.10
RUN /bin/bash -c "source ~/.bashrc"

# Install pip
RUN apt install -y --no-install-recommends netcat
RUN apt-get update
# imagemagick to make gifs
RUN apt-get install -y g++ make libtiff-dev imagemagick

RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10
RUN pip install -r $APP_HOME/requirements.txt
RUN pip install -r $APP_HOME/requirements-ext.txt

COPY ./aproc $APP_HOME/aproc
COPY ./extensions $APP_HOME/extensions
COPY ./airs/core/ $APP_HOME/airs/core/
COPY ./common $APP_HOME/common
COPY ./conf $APP_HOME/conf
COPY ./setup.py $APP_HOME/setup.py
COPY ./assets $APP_HOME/assets

RUN pip install -e $APP_HOME

RUN curl "https://raw.githubusercontent.com/gisaia/ARLAS-EO/v0.0.9/mapping.json" -o $APP_HOME//conf/mapping.json
RUN curl "https://raw.githubusercontent.com/gisaia/ARLAS-EO/v0.0.9/downloads_mapping.json" -o $APP_HOME//conf/downloads_mapping.json

ENV APROC_CONFIGURATION_FILE=$APP_HOME/conf/aproc.yaml
ENV ARLASEO_MAPPING_URL=$APP_HOME//conf/mapping.json
ENV DOWNLOAD_MAPPING_URL=$APP_HOME//conf/downloads_mapping.json
ENV PYTHONPATH=PYTHONPATH=$PYTHONPATH:$APP_HOME
WORKDIR $APP_HOME

#Force one worker to fix ES ingestion
ENTRYPOINT celery -A aproc.core.processes.processes:APROC_CELERY_APP worker -E -c 1 -n worker@%h  --loglevel=INFO