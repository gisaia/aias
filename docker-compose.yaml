version: "3"
networks:
  aias:
services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - aias
    environment:
      - "MINIO_ACCESS_KEY=airs"
      - "MINIO_SECRET_KEY=airssecret"
    command: server /export --console-address ":9001"

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    environment:
      - BUCKET_NAME=${BUCKET_NAME:-airstest}
      - LOGIN=${LOGIN:-airs}
      - PASSWORD=${PASSWORD:-airssecret}
    networks:
      - aias
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 $$LOGIN $$PASSWORD;
      /usr/bin/mc rm -r --force myminio/$$BUCKET_NAME;
      /usr/bin/mc mb myminio/$$BUCKET_NAME;
      /usr/bin/mc anonymous set public myminio/$$BUCKET_NAME;
      exit 0;
      "
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-8.9.2}
    container_name: elasticsearch
    networks:
      - aias
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - node.name=docker-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - 9200:9200

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION:-3-management}
    container_name: rabbitmq
    networks:
      - aias
    ports:
      - 15672:15672
      - 5672:5672

  smtp4dev:
    image: rnwood/smtp4dev:linux-${PLATFORM}-3.2.0-ci20221023104
    platform: linux/${PLATFORM}
    container_name: smtp4dev
    networks:
      - aias
    ports:
      - 3000:80
    environment:
      #Specifies the server hostname. Used in auto-generated TLS certificate if enabled.
      - ServerOptions__HostName=smtp4dev

  redis:
    image: redis/redis-stack:${REDIS_VERSION:-7.2.0-v2}
    networks:
      - aias
    container_name: redis
    ports:
      - 6379:6379

  aproc-processes:
    networks:
      - aias
    build:
      context: '.'
      dockerfile: Dockerfile-aproc-proc
    image: aproc-processes:latest
    #command: tail -f /dev/null
    container_name: 'aproc-processes'
    environment:
      - ARLAS_URL_SEARCH=$ARLAS_URL_SEARCH
      - APROC_CONFIGURATION_FILE=/home/app/worker/conf/aproc.yaml
      - CELERY_BROKER_URL=pyamqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - AIRS_ENDPOINT=http://airs-server:8000/arlas/airs
      - AIRS_INDEX_COLLECTION_PREFIX=${AIRS_INDEX_COLLECTION_PREFIX:-airs}
      - ARLAS_SMTP_ACTIVATED=${ARLAS_SMTP_ACTIVATED}
      - ARLAS_SMTP_HOST=${ARLAS_SMTP_HOST}
      - ARLAS_SMTP_PORT=${ARLAS_SMTP_PORT}
      - ARLAS_SMTP_USERNAME=${ARLAS_SMTP_USERNAME}
      - ARLAS_SMTP_PASSWORD=${ARLAS_SMTP_PASSWORD}
      - ARLAS_SMTP_FROM=${ARLAS_SMTP_FROM}
      - APROC_DOWNLOAD_ADMIN_EMAILS=${APROC_DOWNLOAD_ADMIN_EMAILS}
      - APROC_DOWNLOAD_OUTBOX_DIR=${APROC_DOWNLOAD_OUTBOX_DIR}
      - APROC_DOWNLOAD_CONTENT_USER=${APROC_DOWNLOAD_CONTENT_USER}
      - APROC_DOWNLOAD_SUBJECT_USER=${APROC_DOWNLOAD_SUBJECT_USER}
      - APROC_DOWNLOAD_CONTENT_ERROR=${APROC_DOWNLOAD_CONTENT_ERROR}
      - APROC_DOWNLOAD_SUBJECT_ERROR=${APROC_DOWNLOAD_SUBJECT_ERROR}
      - APROC_DOWNLOAD_CONTENT_ADMIN=${APROC_DOWNLOAD_CONTENT_ADMIN}
      - APROC_DOWNLOAD_SUBJECT_ADMIN=${APROC_DOWNLOAD_SUBJECT_ADMIN}
      - APROC_EMAIL_PATH_PREFIX_ADD=${APROC_EMAIL_PATH_PREFIX_ADD}
      - APROC_PATH_TO_WINDOWS=${APROC_PATH_TO_WINDOWS}
      - APROC_DOWNLOAD_REQUEST_SUBJECT_USER=${APROC_DOWNLOAD_REQUEST_SUBJECT_USER}
      - APROC_DOWNLOAD_REQUEST_CONTENT_USER=${APROC_DOWNLOAD_REQUEST_CONTENT_USER}
      - APROC_DOWNLOAD_REQUEST_SUBJECT_ADMIN=${APROC_DOWNLOAD_REQUEST_SUBJECT_ADMIN}
      - APROC_DOWNLOAD_REQUEST_CONTENT_ADMIN=${APROC_DOWNLOAD_REQUEST_CONTENT_ADMIN}
    volumes:
      - ./test/inputs:/inputs
      - ./outbox/:/outbox
    depends_on:
      - redis
      - rabbitmq
      - smtp4dev

  airs-server:
    networks:
      - aias
    build:
      context: '.'
      dockerfile: Dockerfile-airs
    image: airs-server:latest
    container_name: 'airs-server'
    environment:
      - AIRS_HOST=0.0.0.0
      - AIRS_PORT=8000
      - AIRS_INDEX_ENDPOINT_URL=${AIRS_INDEX_ENDPOINT_URL:-http://localhost:9200}
      - AIRS_INDEX_COLLECTION_PREFIX=${AIRS_INDEX_COLLECTION_PREFIX:-airs}
      - AIRS_INDEX_LOGIN=${AIRS_INDEX_LOGIN:-None}
      - AIRS_INDEX_PWD=${AIRS_INDEX_PWD:-None}
      - AIRS_S3_BUCKET=${AIRS_S3_BUCKET:-airstest}
      - AIRS_S3_ACCESS_KEY_ID=${AIRS_S3_ACCESS_KEY_ID}
      - AIRS_S3_SECRET_ACCESS_KEY=${AIRS_S3_SECRET_ACCESS_KEY}
      - AIRS_S3_REGION=${AIRS_S3_REGION:-None}
      - AIRS_S3_TIER=${AIRS_S3_TIER:-Standard}
      - AIRS_S3_PLATFORM=${AIRS_S3_PLATFORM}
      - AIRS_S3_ASSET_HTTP_ENDPOINT_URL=${AIRS_S3_ASSET_HTTP_ENDPOINT_URL}
      - AIRS_S3_ENDPOINT_URL=${AIRS_S3_ENDPOINT_URL}
      - AIRS_MAPPING_URL=${AIRS_MAPPING_URL:-https://raw.githubusercontent.com/gisaia/ARLAS-EO/v0.0.1/mapping.json}
      - AIRS_COLLECTION_URL=${AIRS_COLLECTION_URL:-https://raw.githubusercontent.com/gisaia/ARLAS-EO/v0.0.1/collection.json}
    ports:
      - "8000:8000"
    depends_on:
      - elasticsearch
      - minio

  aproc-server:
    networks:
      - aias
    build:
      context: '.'
      dockerfile: Dockerfile-aproc-service
    image: aproc-service:latest
    container_name: 'aproc-service'
    environment:
      - ARLAS_URL_SEARCH=$ARLAS_URL_SEARCH
      - APROC_HOST=0.0.0.0
      - APROC_PORT=8001
      - APROC_CONFIGURATION_FILE=/app/conf/aproc.yaml
      - CELERY_BROKER_URL=pyamqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - AIRS_ENDPOINT=http://airs-server:8000/arlas/airs
      - AIRS_INDEX_COLLECTION_PREFIX=${AIRS_INDEX_COLLECTION_PREFIX:-airs}
      - ARLAS_SMTP_ACTIVATED=${ARLAS_SMTP_ACTIVATED}
      - ARLAS_SMTP_HOST=${ARLAS_SMTP_HOST}
      - ARLAS_SMTP_PORT=${ARLAS_SMTP_PORT}
      - ARLAS_SMTP_USERNAME=${ARLAS_SMTP_USERNAME}
      - ARLAS_SMTP_PASSWORD=${ARLAS_SMTP_PASSWORD}
      - ARLAS_SMTP_FROM=${ARLAS_SMTP_FROM}
      - APROC_DOWNLOAD_ADMIN_EMAILS=${APROC_DOWNLOAD_ADMIN_EMAILS}
      - APROC_DOWNLOAD_OUTBOX_DIR=${APROC_DOWNLOAD_OUTBOX_DIR}
      - APROC_DOWNLOAD_CONTENT_USER=${APROC_DOWNLOAD_CONTENT_USER}
      - APROC_DOWNLOAD_SUBJECT_USER=${APROC_DOWNLOAD_SUBJECT_USER}
      - APROC_DOWNLOAD_CONTENT_ERROR=${APROC_DOWNLOAD_CONTENT_ERROR}
      - APROC_DOWNLOAD_SUBJECT_ERROR=${APROC_DOWNLOAD_SUBJECT_ERROR}
      - APROC_DOWNLOAD_CONTENT_ADMIN=${APROC_DOWNLOAD_CONTENT_ADMIN}
      - APROC_DOWNLOAD_SUBJECT_ADMIN=${APROC_DOWNLOAD_SUBJECT_ADMIN}
      - APROC_EMAIL_PATH_PREFIX_ADD=${APROC_EMAIL_PATH_PREFIX_ADD}
      - APROC_PATH_TO_WINDOWS=${APROC_PATH_TO_WINDOWS}
      - APROC_DOWNLOAD_REQUEST_SUBJECT_USER=${APROC_DOWNLOAD_REQUEST_SUBJECT_USER}
      - APROC_DOWNLOAD_REQUEST_CONTENT_USER=${APROC_DOWNLOAD_REQUEST_CONTENT_USER}
      - APROC_DOWNLOAD_REQUEST_SUBJECT_ADMIN=${APROC_DOWNLOAD_REQUEST_SUBJECT_ADMIN}
      - APROC_DOWNLOAD_REQUEST_CONTENT_ADMIN=${APROC_DOWNLOAD_REQUEST_CONTENT_ADMIN}
    ports:
      - "8001:8001"
    depends_on:
      - redis
      - rabbitmq

  aproc-ingest:
    networks:
      - aias
    build:
      context: '.'
      dockerfile: Dockerfile-aproc-ingest
    image: aproc-ingest:latest
    container_name: 'aproc-ingest'
    environment:
      - APROC_ENDPOINT=http://aproc-server:8001/arlas/aproc
      - DRIVERS_CONFIGURATION_FILE=/app/conf/drivers.yaml
      - INGESTED_FOLDER=/inputs
      - COLLECTION=main_collection
      - CATALOG=main_catalog
    volumes:
      - ./test/inputs:/inputs
