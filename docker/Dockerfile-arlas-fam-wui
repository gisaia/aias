### STAGE 1: Build ###

# We label our stage as 'builder'
FROM node:18.20.5 AS builder
WORKDIR /app

COPY ./angular/file-explorer/package.json  ./
COPY ./angular/file-explorer/package-lock.json  ./

## installing necessary libraries
RUN npm install --ignore-scripts && npm run postinstall

COPY ./angular/file-explorer/scripts/start.sh ./

COPY ./angular/file-explorer .

## Build the angular app in production mode
RUN npm run build

### STAGE 2: Setup ###

FROM nginx:1.25.3-alpine3.18-slim
ARG version="0.0"
ENV AIAS_VERSION=${version}

LABEL io.arlas.wui-fam.version=${version}
LABEL vendor="Gisa√Øa"
LABEL description="This container serves the FAM-wui app"

RUN apk add  --no-cache --update bash jq netcat-openbsd curl && rm -rf /var/cache/apk/*

## Copy our default nginx config
COPY ./angular/file-explorer/nginx/default.conf /etc/nginx/conf.d/

## Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

## From 'builder' stage copy over the artifacts in dist folder to default nginx public folder
COPY --from=builder /app/dist/file-explorer /usr/share/nginx/html
COPY --from=builder /app/start.sh /usr/share/nginx/

RUN addgroup -g 1000 arlasgroup && \
    adduser -D -u 1000 -G arlasgroup arlasuser
USER 1000

HEALTHCHECK CMD curl --fail http://localhost:8080/ || exit 1

ENTRYPOINT ["/usr/share/nginx/start.sh"]